@use "./general";

:root {
  --app-header-height: 7.2rem;
  --toolbar-width: 30rem;
}

*,
*::before,
*::after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html {
  font-size: 10px;
  font-size: 62.5%;
  overflow-x: hidden;
  scroll-behavior: smooth;
}

body {
  font-family: general.$sans-serif-font;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  min-height: 100vh;
  width: 100%;
  color: general.$font-color;
  background-color: general.$background-color;
  // overflow-y: scroll;

  line-height: 1;
  font-weight: 500;
}

.app-container {
  padding-top: var(--app-header-height);
}

input,
textarea,
button {
  border: none;
  font-family: inherit;
  color: inherit;
  background-color: inherit;
}

/*
* apply placeholder styles to all pseudo selectors
* because applying styles to all of them at once doesn't work
*/

@mixin placeholder-style($selectors...) {
  @each $selector in $selectors {
    #{$selector} {
      color: rgba(187, 187, 187, 0.5);
      opacity: 1;
    }
  }
}

@include placeholder-style(
  "::placeholder",
  "::-webkit-input-placeholder",
  "::-moz-placeholder",
  ":-ms-input-placeholder",
  "::-ms-input-placeholder"
);

button {
  cursor: pointer;
  background: none;
}

a {
  text-decoration: none;
}

*:focus {
  outline: none;
  // box-shadow: 0 0 0 2px general.$primary-color;
}

.modal-container {
  position: fixed;
  width: 100vw;
  height: 100vh;
  background-color: rgba($color: #000000, $alpha: 0.1);
  transition: all 0.3s;

  display: flex;
  align-items: center;
  justify-content: center;

  visibility: hidden;
  opacity: 0;
  pointer-events: none;

  .modal-content {
    transform: scale(1.1);
  }

  // styles for when the modal is open
  &.modal-active {
    visibility: visible;
    pointer-events: all;
    opacity: 1;

    .modal-content {
      transform: scale(1);
    }
  }
}

img {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
  font-size: 0;
}

// react modal

.ReactModal__Overlay {
  transition: opacity 150ms ease-in-out;
  opacity: 0;
}

.ReactModal__Overlay--after-open {
  opacity: 1;
}

.ReactModal__Overlay--before-close {
  opacity: 0;
}
